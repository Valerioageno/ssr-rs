version: 2
jobs:
  build-and-test:
    docker:
      - image: cimg/rust:1.68.2-node
    environment:
      RUSTFLAGS: "-D warnings"
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - run:
          name: Generate ssr production build
          command: cd client && yarn install --yes && yarn build:all
      - restore-cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets
          command: cargo build
      - save-cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Run all tests
          command: cargo test

  security:
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Cache permission
          command: sudo chown -R $(whoami):$(id -ng) /usr/local/cargo
      - restore_cache:
          keys:
            - v1-cargo-audit-{{ arch }}
      - run:
          name: Install dependency auditing tool
          command: cargo install cargo-audit
      - save_cache:
          paths:
            - usr/local/cargo
          key: v1-cargo-audit-{{ arch }}
      - run:
          name: Check for known security issues in dependencies
          # Ignored alert are related to dependencies of dev dependencies
          command: cargo audit --ignore RUSTSEC-2020-0159 --ignore RUSTSEC-2020-0071

  format:
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install formatter
          command: rustup component add rustfmt
      - run:
          name: Check formatting
          command: cargo fmt --all -- --check

  lint:
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install clippy
          command: rustup component add clippy
      - run:
          name: Linting
          command: cargo clippy -- -D warnings

  coverage:
    machine: true
    steps:
      - checkout
      - run:
          name: Pull xd009642/tarpaulin
          command: docker pull xd009642/tarpaulin
      - run:
          name: Generate coverage report
          command: >-
            docker run --security-opt seccomp=unconfined
            -v $PWD:/volume xd009642/tarpaulin
            cargo tarpaulin --out Xml --all-features
      - run:
          name: Upload to codecov.io
          command: bash <(curl -s https://codecov.io/bash) -Z -f cobertura.xml

  doc:
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Check documentation
          command: cargo doc --no-deps --document-private-items --all-features --workspace

workflows:
  version: 2
  build-test:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - security:
          filters:
            tags:
              only: /.*/
      - format:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/
      - coverage:
          filters:
            tags:
              only: /.*/
      - doc:
          filters:
            tags:
              only: /.*/
